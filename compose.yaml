# 📁 compose.yaml

# ──────────────────────────────────────────────────────────────────────────────────────────────
# 🧱 Build & Runtime Base Configuration
# ──────────────────────────────────────────────────────────────────────────────────────────────

x-app-base: &app-base
  build:
    context: ./docker
    dockerfile: Dockerfile
  working_dir: /var/www
  volumes:
    - ./:/var/www
  networks:
    - app-network
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"

# ──────────────────────────────────────────────────────────────────────────────────────────────
# 🛢️ Database & Cache Environment Settings
# ──────────────────────────────────────────────────────────────────────────────────────────────

# Database Settings
x-env-database: &env-database
  DB_HOST: mysql
  DB_PORT: 3306
  DB_DATABASE: book_rental
  DB_USERNAME: root
  DB_PASSWORD: secret

# Redis Settings
x-env-redis: &env-redis
  REDIS_HOST: redis
  REDIS_PORT: 6379

# ──────────────────────────────────────────────────────────────────────────────────────────────
# 🌍 Application-Wide Environment
# ──────────────────────────────────────────────────────────────────────────────────────────────

# Application environment settings
x-app-environment: &app-environment
  APP_ENV: local
  <<:
    - *env-database
    - *env-redis

# ──────────────────────────────────────────────────────────────────────────────────────────────
# ⚙️ Health Check Configuration
# ──────────────────────────────────────────────────────────────────────────────────────────────

# 🩺 App health check
x-healthcheck: &app-healthcheck
  interval: 10s
  timeout: 5s
  retries: 5
  start_period: 5s

# ──────────────────────────────────────────────────────────────────────────────────────────────
# 🚦 Resource Allocation per App Container
# ──────────────────────────────────────────────────────────────────────────────────────────────

# 🛢️ App deploy
x-app-deploy: &app-deploy
  resources:
    limits:
      cpus: '2.0'
      memory: 2G
    reservations:
      cpus: '1.0'
      memory: 1G

# ──────────────────────────────────────────────────────────────────────────────────────────────
# 🔧 Service Blueprints (for Actual Deployables)
# ──────────────────────────────────────────────────────────────────────────────────────────────

# MySQL 8.0 Blueprint
x-service-mysql: &service-mysql
  image: mysql:8.0
  container_name: book_rental_mysql
  environment:
    MYSQL_DATABASE: book_rental
    MYSQL_ROOT_PASSWORD: secret
    #MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
  volumes:
    - mysql_data:/var/lib/mysql
    - ./docker/mysql/config/mysql.cnf:/etc/mysql/conf.d/my.cnf
  ports:
    - "3306:3306"
  networks:
    - app-network
  command: --skip-host-cache --skip-name-resolve
  healthcheck:
    test: ["CMD-SHELL", "mysqladmin ping -h localhost -P 3306 -u root -psecret"]
    <<: *app-healthcheck

# Redis (latest) Blueprint
x-service-redis: &service-redis
  image: redis:latest
  container_name: book_rental_redis
  ports:
    - "6379:6379"
  volumes:
    - redis-data:/data
    - ./docker/redis/config/redis.conf:/usr/local/etc/redis/config/redis.conf
  restart: unless-stopped
  networks:
    - app-network
  command: ["redis-server", "/usr/local/etc/redis/config/redis.conf"]
  healthcheck:
    test: ["CMD", "redis-cli", "ping"]
    <<: *app-healthcheck

# Laravel (PHP) main container
x-service-app: &service-app
  container_name: book_rental_app
  command: []
  <<: *app-base
  depends_on:
    mysql:
      condition: service_healthy
    redis:
      condition: service_healthy
  environment:
    <<: *app-environment
  deploy:
    <<: *app-deploy

# Setup container (dependencies install, tests, migrations, seed, etc.)
x-service-app-setup: &service-app-setup
  container_name: book_rental_app_setup
  profiles: ["setup"]
  command: ["setup"]
  <<: *app-base
  depends_on:
    mysql:
      condition: service_healthy
    redis:
      condition: service_healthy
  environment:
    <<: *app-environment
  deploy:
    <<: *app-deploy


# Nginx as a webserver proxy for the Laravel app
x-service-webserver: &service-webserver
  container_name: book_rental_nginx
  volumes:
    - .:/var/www
    - ./docker/nginx/config:/etc/nginx/conf.d
  ports:
    - "8000:80"
  build:
    context: ./docker/nginx
    dockerfile: Dockerfile.nginx
  depends_on:
    - app
  networks:
    - app-network

# Vite (frontend builder)
x-service-vite: &service-vite
  container_name: book_rental_vite
  profiles: ["dev"]
  build:
    context: ./docker
    dockerfile: Dockerfile.vite
  working_dir: /var/www
  volumes:
    - ./:/var/www
  ports:
    - "5173:5173"
  networks:
    - app-network
  depends_on:
    - app

# ──────────────────────────────────────────────────────────────────────────────────────────────
# 🚀 Final Service Wiring (The Actual Boot Order)
# ──────────────────────────────────────────────────────────────────────────────────────────────

services:
  # MySQL Service
  mysql:
    <<: *service-mysql

  # Redis Service
  redis:
    <<: *service-redis

  # PHP Service
  app:
    <<: *service-app

  # PHP Setup Service (runs dependencies install, tests, migrations, seed, etc.)
  app_setup:
    <<: *service-app-setup

  # Nginx Service
  webserver:
    <<: *service-webserver

  # Vite Service
  vite:
    <<: *service-vite

# ──────────────────────────────────────────────────────────────────────────────────────────────
# 🕸️ Networks & Volumes
# ──────────────────────────────────────────────────────────────────────────────────────────────

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  redis-data:
    driver: local
